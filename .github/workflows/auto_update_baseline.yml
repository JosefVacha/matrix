name: Auto-update baseline (manual)

on:
  workflow_dispatch:
    inputs:
      create_pr:
        description: 'If true, create a PR when metrics improve (requires ALLOW_NOTIFICATIONS=1 secret)'
        required: false
        default: 'false'
      tolerance_up:
        description: 'Relative improvement fraction required to consider updating baseline (e.g. 0.0 = any improvement)'
        required: false
        default: '0.0'

jobs:
  update_baseline:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas pyarrow

      - name: Run paper-trade simulator
        run: |
          mkdir -p outputs
          make paper-trade-sim

      - name: Extract metrics
        run: |
          python3 scripts/qa/extract_paper_trade_metrics.py --input outputs/paper_trade_report.json --output outputs/paper_trade_metrics.json

      - name: Decide if baseline should be updated
        id: decide
        run: |
          python3 scripts/qa/should_update_baseline.py --tol ${{ github.event.inputs.tolerance_up }} > decide.out
          cat decide.out
          # Write explicit key=value lines to GITHUB_OUTPUT. Use printf to avoid writing bare 'false' which
          # GitHub Actions rejects as invalid format for ::set-output style files.
          SHOULD_PR=$(grep '^should_pr=' decide.out | sed 's/should_pr=//')
          CURRENT_FINAL=$(grep '^current_final=' decide.out | sed 's/current_final=//')
          printf 'should_pr=%s\n' "${SHOULD_PR}" >> $GITHUB_OUTPUT
          printf 'current_final=%s\n' "${CURRENT_FINAL}" >> $GITHUB_OUTPUT

      - name: Create PR with updated baseline (optional)
        if: ${{ steps.decide.outputs.should_pr == 'true' && github.event.inputs.create_pr == 'true' }}
        run: |
          if [ "${ALLOW_NOTIFICATIONS:-}" != "1" ]; then
            echo "ALLOW_NOTIFICATIONS not set or not 1; skipping PR creation"
            exit 0
          fi
          python3 scripts/qa/create_baseline_pr.py

      - name: Report decision
        run: |
          echo "should_pr=${{ steps.decide.outputs.should_pr }}"
          echo "current_final=${{ steps.decide.outputs.current_final }}"
