name: Paper-trade smoke (manual)

on:
  workflow_dispatch: {}

jobs:
  paper_trade_smoke:
    name: Run paper-trade smoke
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas pyarrow

      - name: Run paper-trade simulator
        env:
          TZ: UTC
        run: |
          mkdir -p outputs
          make paper-trade-sim

      - name: Extract paper-trade metrics
        run: |
          python3 scripts/qa/extract_paper_trade_metrics.py --input outputs/paper_trade_report.json --output outputs/paper_trade_metrics.json

      - name: Upload paper-trade outputs
        uses: actions/upload-artifact@v4
        with:
          name: paper-trade-outputs
          path: |
            outputs/paper_trade_report.json
            outputs/paper_trade_report_trades.csv
            outputs/paper_trade_metrics.json
            outputs/*.log

      - name: Optional: compare metrics to baseline
        if: ${{ always() && (exists('ci/baselines/paper_trade_metrics_baseline.json')) }}
        run: |
          echo "Comparing metrics to baseline"
          python3 - <<'PY'
import json, sys
from pathlib import Path

base = Path('ci/baselines/paper_trade_metrics_baseline.json')
cur = Path('outputs/paper_trade_metrics.json')

if not base.exists():
    print('No baseline found, skipping')
    sys.exit(0)

if not cur.exists():
    print('Current metrics missing, failing')
    sys.exit(2)

b = json.loads(base.read_text())
c = json.loads(cur.read_text())

print('baseline:', b)
print('current :', c)

if c.get('final_net') < b.get('final_net') - 1e-9:
    print('Regression detected: final_net decreased')
    sys.exit(3)

print('No regression')
PY
