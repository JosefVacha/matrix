    {
        "label": "sim-plan",
        "type": "shell",
        "command": "echo",
        "args": ["Review THRESHOLDS.md Decision Rules and pick simulator parameters (UP, DN, hysteresis, cooldown) for synthetic run."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Plan synthetic simulator parameters (OFFLINE ONLY)"
    },
    {
        "label": "sim-run",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/sim/simulate_thresholds.py --len 500 --noise 0.2 --up 0.1 --dn -0.1 --hysteresis 0.02 --cooldown 3 --out docs/summaries/SIM_SUMMARY_SAMPLE.md"],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Run synthetic simulator (OFFLINE ONLY)"
    },
    {
        "label": "sim-report",
        "type": "shell",
        "command": "echo",
        "args": ["Save SIM summary to docs/summaries/ and reference in STABILITY_RECAP.md (run_tag = SIM_<tag>)"],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Document SIM summary and link in recap (OFFLINE ONLY)"
    },
{
    "label": "metrics-summary",
    "type": "shell",
    "command": "echo",
    "args": [
        "'SKELETON: python scripts/metrics/extract_metrics.py --in docs/REPORT_*.md --out docs/summaries/METRICS_SUMMARY_*.md'"
    ],
    "group": "test",
    "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
    },
    "problemMatcher": [],
    "detail": "Extract metrics summary from filled REPORTs (SKELETON - NO FILE I/O)"
},
{
    "label": "churn-calc",
    "type": "shell",
    "command": "echo",
    "args": [
        "python scripts/metrics/calc_churn.py --report docs/REPORTS/REPORT_<DATE>_<TAG>.md"
    ],
    "group": "test",
    "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
    },
    "problemMatcher": [],
    "detail": "Calculate churn rate from REPORT (NO LIVE ACTION; OFFLINE ONLY)"
},
{
    "label": "stability-score-calc",
    "type": "shell",
    "command": "echo",
    "args": [
        "python scripts/metrics/calc_stability_score.py --summaries docs/summaries/SUMMARY_<DATE1>_<TAG1>.md docs/summaries/SUMMARY_<DATE2>_<TAG2>.md"
    ],
    "group": "test",
    "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
    },
    "problemMatcher": [],
    "detail": "Calculate stability score from summaries (NO LIVE ACTION; OFFLINE ONLY)"
},
"label": "recap-merge",
"type": "shell",
"command": "echo",
"args": [
    "python scripts/metrics/merge_summaries.py --inputs docs/summaries/SUMMARY_*.md --out docs/STABILITY_RECAP.md"
],
"group": "test",
"presentation": {
    "echo": true,
    "reveal": "always",
    "focus": false,
    "panel": "shared",
    "showReuseMessage": true,
    "clear": false
},
"problemMatcher": [],
"detail": "Merge metrics summaries into stability recap (NO LIVE ACTION; OFFLINE ONLY)"
},
"label": "ts-print",
"type": "shell",
"command": "echo",
"args": [
"python scripts/thresholds/print_thresholds.py --file docs/thresholds/sets/TS_<DATE>_<TAG>.yml"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Print key thresholds for copy-paste (NO LIVE ACTION; OFFLINE ONLY)"
},
"label": "markers-validate",
"type": "shell",
"command": "echo",
"args": [
"python scripts/metrics/validate_report_markers.py --report docs/REPORTS/REPORT_<DATE>_<TAG>.md"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Validate report markers (NO LIVE ACTION; OFFLINE ONLY)"
},
{
"label": "ts-validate",
"type": "shell",
"command": "echo",
"args": [
"python scripts/thresholds/validate_threshold_set.py --file docs/thresholds/sets/TS_<DATE>_<TAG>.yml"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Validate threshold set fields (NO LIVE ACTION; OFFLINE ONLY)"
},
"label": "metrics-extract-run",
"type": "shell",
"command": "echo",
"args": [
"python scripts/metrics/extract_metrics.py --report docs/REPORTS/REPORT_<DATE>_<TAG>.md --out docs/summaries/SUMMARY_<DATE>_<TAG>.md"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Extract metrics summary from REPORT (NO LIVE ACTION)"
},
{
"label": "thresholds-diff-run",
"type": "shell",
"command": "echo",
"args": [
"python scripts/thresholds/diff_thresholds.py --a docs/thresholds/sets/TS_A.yml --b docs/thresholds/sets/TS_B.yml --out docs/diffs/DIFF_TS_A_vs_B.md"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Diff threshold sets and output Markdown (NO LIVE ACTION)"
},
"label": "thresholds-diff",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: python scripts/thresholds/diff_thresholds.py --a TS_A.yml --b TS_B.yml --out docs/diffs/DIFF_TS_A_vs_B.md'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Generate Markdown diff for threshold sets (SKELETON - NO FILE I/O)"
},
"version": "2.0.0",
"tasks": [
    {
        "label": "m1-preflight",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/qa/check_doc_consistency.py && python scripts/metrics/validate_report_markers.py --report docs/REPORTS/REPORT_SAMPLE.md && python scripts/thresholds/validate_threshold_set.py --file docs/thresholds/sets/TS_SAMPLE_A.yml (OFFLINE ONLY)", "Run doc consistency QA and validators before DRY run."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Preflight QA and validation for DRY run (OFFLINE ONLY)"
    },
    {
        "label": "m1-rehearsal",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/runbook/dry_run_rehearsal.py --ts docs/thresholds/sets/TS_SAMPLE_A.yml --cfg configs/backtest.dry.json --raw docs/REPORTS/RAW/FT_SAMPLE.json --report docs/REPORTS/REPORT_SAMPLE_DRY.md --summary docs/summaries/SUMMARY_SAMPLE_DRY.md (OFFLINE ONLY)", "Print DRY run shell commands for rehearsal."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "DRY run rehearsal commands (OFFLINE ONLY)"
    },
    {
        "label": "m1-post",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/metrics/ingest_freqtrade_report.py --input docs/REPORTS/RAW/FT_SAMPLE.json --report docs/REPORTS/REPORT_SAMPLE_DRY.md --summary docs/summaries/SUMMARY_SAMPLE_DRY.md && python scripts/metrics/merge_summaries.py --inputs docs/summaries/SUMMARY_SAMPLE_DRY.md --out docs/STABILITY_RECAP.md && python scripts/thresholds/diff_thresholds.py --a docs/thresholds/sets/TS_SAMPLE_A.yml --b docs/thresholds/sets/TS_SAMPLE_B.yml --out docs/diffs/DIFF_TS_SAMPLE_A_vs_B.md && python scripts/thresholds/changelog_from_diffs.py --diffs docs/diffs/DIFF_TS_SAMPLE_A_vs_B.md --out docs/thresholds/CHANGELOG.md (OFFLINE ONLY)", "Ingest, summarize, merge, diff, changelog, and create decision note after DRY run."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Post-DRY run automation and decision (OFFLINE ONLY)"
    },
    {
        "label": "dry-rehearsal",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/runbook/dry_run_rehearsal.py --ts docs/thresholds/sets/TS_SAMPLE_A.yml --cfg configs/backtest.dry.json --raw docs/REPORTS/RAW/FT_SAMPLE.json --report docs/REPORTS/REPORT_SAMPLE_DRY.md --summary docs/summaries/SUMMARY_SAMPLE_DRY.md (OFFLINE ONLY)", "Prints DRY run shell commands for human copy/paste."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Print DRY run shell commands for rehearsal (OFFLINE ONLY)"
    },
    {
        "label": "m1-exit",
        "type": "shell",
        "command": "echo",
        "args": ["See docs/RUNBOOK_DRY.md for exit criteria checklist. Confirm STABILITY_RECAP.md row is present before PR.", "Tick all boxes in RUNBOOK_DRY.md before closing Milestone M1."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Milestone M1 exit criteria checklist (OFFLINE ONLY)"
    },
    {
        "label": "ts-changelog",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/thresholds/changelog_from_diffs.py --diffs docs/diffs/DIFF_TS_SAMPLE_A_vs_B.md --out docs/thresholds/CHANGELOG.md (OFFLINE ONLY)", "Update thresholds changelog after DIFF."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Update thresholds changelog from DIFF_TS files (OFFLINE ONLY)"
    },
{
"label": "download-data",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: freqtrade download-data --exchange binance --pairs BTC/USDT ETH/USDT --timeframes 5m 1h --days 30'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Download sample data for MATRIX backtesting (SKELETON - NO LIVE EXECUTION)"
},
    {
        "label": "qa-docs-consistency",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/qa/check_doc_consistency.py (OFFLINE ONLY)", "Run before each DRY run to check mapping/adapter/CONTRACTS.md docstrings."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Check docstring/contract consistency (OFFLINE ONLY)"
    },
        "label": "adapter-plan",
        "type": "shell",
        "command": "echo",
        "args": [
            "Open: src/matrix/adapter/freqtrade_strategy_adapter.py, strategies/MatrixAdapterStrategy.py, docs/DRY_BACKTEST_PROTOCOL.md. Review docstrings and contract references."
        ],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Adapter planning (OFFLINE ONLY / NO LIVE ACTION)"
    },
    {
        "label": "recap-update",
        "type": "shell",
        "command": "echo",
        "args": ["python scripts/metrics/merge_summaries.py --inputs docs/summaries/SUMMARY_*.md --out docs/STABILITY_RECAP.md (OFFLINE ONLY)", "Update recap table after new DRY run."],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Merge summaries into STABILITY_RECAP.md (OFFLINE ONLY)"
    },
        "label": "adapter-walkthrough",
        "type": "shell",
        "command": "echo",
        "args": [
            "1. Copy configs/backtest.sandbox.example.json → configs/backtest.dry.json (local only)",
            "2. Pick TS_*.yml from docs/thresholds/sets/ and print via scripts/thresholds/print_thresholds.py",
            "3. Inject thresholds into MatrixAdapterStrategy (see docstring)",
            "4. Run Freqtrade dry-run/backtest via CLI (see DRY_BACKTEST_PROTOCOL.md)",
            "5. Fill docs/REPORTS/REPORT_<DATE>_DRY.md (template + markers)",
            "6. Generate SUMMARY + optional DIFF; update STABILITY_RECAP row",
            "7. Guardrails: static pairlist, same feature pipeline, record commit hashes",
            "8. NO LIVE TRADING / OFFLINE ONLY"
        ],
        "group": "test",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "shared",
            "showReuseMessage": true,
            "clear": false
        },
        "problemMatcher": [],
        "detail": "Adapter walkthrough (OFFLINE ONLY / NO LIVE ACTION)"
    },
{
"label": "backtest-quick-month",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: freqtrade backtesting --strategy MatrixStrategy --timeframe 5m --timerange 20241201-20241231'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Quick MATRIX backtest for last month (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "hyperopt-quick",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: freqtrade hyperopt --strategy MatrixStrategy --epochs 100 --spaces buy sell'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Quick MATRIX hyperparameter optimization (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "open-ui",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: freqUI --config configs/matrix_config.json'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Launch FreqUI for MATRIX monitoring (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "webserver",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: freqtrade webserver --config configs/matrix_config.json'"
],
"group": "build",
"isBackground": true,
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Launch MATRIX Freqtrade webserver (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "validate-contracts",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: python -m pytest tests/test_contracts.py -v'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Validate MATRIX contracts between modules (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "contract-lint",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: Check CONTRACTS.md & test skeletons ...'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Check MATRIX I/O contracts and test skeletons (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "wfo-check",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: Review WFO_CHECKLIST.md and confirm completed/pending ...'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Check Walk-Forward Optimization checklist (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "bt-repro-note",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: BT používá configs/pairlist.static.json (statická pairlist).'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Reminder for reproducible backtests with static pairlist (SKELETON - NO LIVE EXECUTION)"
},
{
"label": "hooks-scan",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: Scan hooks wiring & contracts (NO LIVE ACTION)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Scan FreqAI hooks wiring and contracts validation (SKELETON - NO LIVE ACTION)"
},
{
"label": "telemetry-scan",
"type": "shell",
"command": "echo",
"args": [
"'SKELETON: Verify telemetry stubs present (NO FILE I/O)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Verify telemetry stubs are present and functional (SKELETON - NO FILE I/O)"
},
{
"label": "bt-sandbox-plan",
"type": "shell",
"command": "echo",
"args": [
"'SANDBOX: Review docs/SANDBOX_BT.md → configs/backtest.sandbox.example.json → WFO blocks'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Review MATRIX sandbox backtest plan and offline protocol (PLANNING ONLY)"
},
{
"label": "thresholds-plan",
"type": "shell",
"command": "echo",
"args": [
"'THRESHOLDS: Review docs/THRESHOLDS.md → Grid Sweep → WFO Evaluation → Stability Check'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Review MATRIX threshold optimization methodology (PLANNING ONLY)"
},
{
"label": "metrics-first",
"type": "shell",
"command": "echo",
"args": [
"'METRICS: Review docs/METRICS_CHECKLIST.md → Phase 1 (Data Quality + Signal Behavior)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Review MATRIX essential metrics checklist for sandbox implementation (PLANNING ONLY)"
},
{
"label": "data-check",
"type": "shell",
"command": "echo",
"args": [
"'DATA PLACEMENT: Review data/README.md for OHLCV file structure and validation checklist (OFFLINE ONLY)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Review data placement documentation and verify local OHLCV files (OFFLINE ONLY)"
},
{
"label": "precheck",
"type": "shell",
"command": "echo",
"args": [
"'PRECHECK: Walk through docs/SANDBOX_PRECHECK.md validation boxes before running anything (OFFLINE ONLY)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Complete SANDBOX_PRECHECK.md validation checklist before first run (OFFLINE ONLY)"
},
{
"label": "bt-sandbox-fill",
"type": "shell",
"command": "echo",
"args": [
"'CONFIG COPY: cp configs/backtest.sandbox.example.json configs/backtest.sandbox.json → edit timerange/pairs (OFFLINE ONLY)'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Copy and customize sandbox backtest configuration locally (OFFLINE ONLY)"
},
{
"label": "bt-sandbox-run",
"type": "shell",
"command": "echo",
"args": [
"'MANUAL RUN: Execute sandbox backtest using your local FreqTrade CLI outside VS Code (OFFLINE ONLY)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Run sandbox backtest manually using local FreqTrade installation (OFFLINE ONLY)"
},
{
"label": "bt-sandbox-report",
"type": "shell",
"command": "echo",
"args": [
"'REPORT FILL: Complete docs/REPORT_TEMPLATE.md with backtest results and analysis (OFFLINE ONLY)'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Fill report template with sandbox backtest results and commit findings (OFFLINE ONLY)"
},
{
"label": "thresholds-select",
"type": "shell",
"command": "echo",
"args": [
"'THRESHOLDS: Choose TS_*.yml from docs/thresholds/sets for the 2nd offline run.'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Select threshold set for second sandbox run (OFFLINE ONLY)"
},
{
"label": "bt-sandbox-run-2",
"type": "shell",
"command": "echo",
"args": [
"'MANUAL RUN: Run 2nd offline sandbox with selected thresholds (manual CLI, OFFLINE ONLY)'"
],
"group": "test",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Run second sandbox backtest manually using selected thresholds (OFFLINE ONLY)"
},
{
"label": "bt-sandbox-report-2",
"type": "shell",
"command": "echo",
"args": [
"'REPORT FILL: Fill REPORT using Chosen Threshold Set + Stability notes (OFFLINE ONLY)'"
],
"group": "build",
"presentation": {
"echo": true,
"reveal": "always",
"focus": false,
"panel": "shared",
"showReuseMessage": true,
"clear": false
},
"problemMatcher": [],
"detail": "Fill report template with second sandbox results and stability score (OFFLINE ONLY)"
}
]
}